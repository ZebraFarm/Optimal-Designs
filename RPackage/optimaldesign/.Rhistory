Methd = "abc"
Methed = "abc"
rm(ls())
rm(Methd)
rm(Methed)
Method = "abc"
length(Method)
len(Method)
size(Method)
nrow(Method)
ncol(Method)
nchar(Method)
clear
library(CVXR)
N = 101
a = -1
b = 1
p = 3
P = 0:p
u_i <- function(i,a,b)
a + (b-a) * (i-1) / (N-1)
A = list(N)
A = lapply(1:N, function(i) A[[i]] = u_i(i,a,b)^P %*% t(u_i(i,a,b)^P))
# Initializing Variables, Objective, and Constraints
W = Variable(N)
obj = Minimize(matrix_frac(diag(3),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
const = list(W >= 0, sum(W) == 1)
library(CVXR)
N = 21
a = -1
b = 1
p = 3
P = 0:p
u_i <- function(i,a,b)
a + (b-a) * (i-1) / (N-1)
A = list(N)
A = lapply(1:N, function(i) A[[i]] = u_i(i,a,b)^P %*% t(u_i(i,a,b)^P))
# Initializing Variables, Objective, and Constraints
W = Variable(N)
obj = Minimize(matrix_frac(diag(3),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
const = list(W >= 0, sum(W) == 1)
# Creating Problem & Solving
prob = Problem(obj, const)
ans = solve(prob)
obj = Minimize(matrix_frac(diag(3),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
A = list(N)
A = lapply(1:N, function(i) A[[i]] = u_i(i,a,b)^P %*% t(u_i(i,a,b)^P))
# Initializing Variables, Objective, and Constraints
W = Variable(N)
obj = Minimize(matrix_frac(diag(3),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
N = 21
a = -1
b = 1
p = 3
P = 0:p
u_i <- function(i,a,b)
a + (b-a) * (i-1) / (N-1)
A = list(N)
A = lapply(1:N, function(i) A[[i]] = u_i(i,a,b)^P %*% t(u_i(i,a,b)^P))
# Initializing Variables, Objective, and Constraints
W = Variable(N)
obj = Minimize(matrix_frac(diag(3),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
const = list(W >= 0, sum(W) == 1)
# Creating Problem & Solving
prob = Problem(obj, const)
library(CVXR)
N = 21
a = -1
b = 1
p = 3
P = 0:p
u_i <- function(i,a,b)
a + (b-a) * (i-1) / (N-1)
A = list(N)
A = lapply(1:N, function(i) A[[i]] = u_i(i,a,b)^P %*% t(u_i(i,a,b)^P))
# Initializing Variables, Objective, and Constraints
W = Variable(N)
obj = Minimize(matrix_frac(diag(p+1),Reduce('+', lapply(1:N, function(x) W[x] * A[[x]]) ) ) )
const = list(W >= 0, sum(W) == 1)
# Creating Problem & Solving
prob = Problem(obj, const)
ans = solve(prob)
ans
source('~/Documents/Work/UVic/Convex Optimal Designs/Problem3/p3r.R', echo=TRUE)
source('~/Documents/Work/UVic/Convex Optimal Designs/Problem3/p3r.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
data_A <- read.table(file="A-optimal-output.txt",header=T)
data_D <- read.table(file="D-optimal-output.txt",header=T)
png('A-Optimal-Convergance.png')
ggplot(data_A,aes(N)) +
geom_line(aes(y=U_i,colour="U_i")) +
geom_abline(intercept = 0.4575800000000001,slope=0, aes(colour="Asymptote")) +
labs(x = "Number of Variables", y = "U_i", title = "A-Optimal (a = -1, b = 1)") +
ylim(c(0.399,.46)) +
scale_color_manual("", values = c("U_i" = "green", "Asymptote" = "blue"))
library(ggplot2)
data_A <- read.table(file="A-optimal-output.txt",header=T)
data_D <- read.table(file="D-optimal-output.txt",header=T)
png('A-Optimal-Convergance.png')
ggplot(data_A,aes(N)) +
geom_line(aes(y=U_i,colour="U_i")) +
geom_abline(intercept = 0.4575800000000001,slope=0, aes(colour="Asymptote")) +
labs(x = "Number of Variables", y = "U_i", title = "A-Optimal (a = -1, b = 1)") +
ylim(c(0.399,.46)) +
scale_color_manual("", values = c("U_i" = "green", "Asymptote" = "blue"))
dev.off()
png('D-Optimal-Convergance.png')
ggplot(data_D,aes(N)) +
geom_line(aes(y=U_i,colour="U_i")) +
geom_abline(intercept = 0.45248,slope=0, aes(colour="Asymptote")) +
ylim(c(0.399,.46)) +
labs(x = "Number of Variables", y = "U_i", title = "D-Optimal (a = -1, b = 1)") +
scale_color_manual("", values = c("U_i" = "green", "Asymptote" = "blue"))
dev.off()
data_A <- read.table(file="A-optimal-output.txt",header=T)
data_D <- read.table(file="D-optimal-output.txt",header=T)
png('A-Optimal-Convergance.png')
ggplot(data_A,aes(N)) +
geom_line(aes(y=U_i,colour="U_i")) +
geom_abline(intercept = 0.4575800000000001,slope=0, aes(colour="Asymptote")) +
labs(x = "Number of Variables", y = "U_i", title = "A-Optimal (a = -1, b = 1)") +
ylim(c(0.38,.47)) +
scale_color_manual("", values = c("U_i" = "green", "Asymptote" = "blue"))
dev.off()
png('D-Optimal-Convergance.png')
ggplot(data_D,aes(N)) +
geom_line(aes(y=U_i,colour="U_i")) +
geom_abline(intercept = 0.45248,slope=0, aes(colour="Asymptote")) +
ylim(c(0.38,.47)) +
labs(x = "Number of Variables", y = "U_i", title = "D-Optimal (a = -1, b = 1)") +
scale_color_manual("", values = c("U_i" = "green", "Asymptote" = "blue"))
dev.off()
